<UserControl x:Class="VirtualKeyboard.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VirtualKeyboard.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:validationRules="clr-namespace:VirtualKeyboard.ValidationRules"
             xmlns:converters="clr-namespace:VirtualKeyboard.Converters"
             mc:Ignorable="d" >

    <UserControl.Resources>
        <converters:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
        <converters:ObjectToBooleanConverter x:Key="ObjectToBooleanConverter"/>
        <converters:BooleanAndConverter x:Key="BooleanAndConverter"/>
        <converters:CountToBooleanConverter x:Key="CountToBooleanConverter"/>
    </UserControl.Resources>

    <materialDesign:DialogHost x:Name="DialogHost" IsOpen="{Binding IsBusy}">
        <materialDesign:DialogHost.DialogContent>
            <StackPanel>
                <ProgressBar
                    Style="{DynamicResource MaterialDesignCircularProgressBar}"
                    Height="50" Width="50" Margin="50,20,50,10"
                    HorizontalAlignment="Center"
                    IsIndeterminate="True"
                    Value="0">
                </ProgressBar>
                <TextBlock Text="Please wait" HorizontalAlignment="Center" Margin="10"/>
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>
        <Border Padding="10" BorderThickness="1">
            <Grid Width="300" Height="300">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
                        <Setter Property="Height" Value="{Binding ElementName=Headsets, Path=Height}"/>
                        <Setter Property="Width" Value="{Binding ElementName=Headsets, Path=Height}"/>
                    </Style>
                </Grid.Resources>

                <TextBox materialDesign:HintAssist.Hint="Client ID" Grid.Row="0" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                    <Binding Path="ClientId" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRules:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <TextBox materialDesign:HintAssist.Hint="Client Secret" Grid.Row="1" Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                    <Binding Path="ClientSecret" UpdateSourceTrigger="PropertyChanged" Mode="OneWay">
                        <Binding.ValidationRules>
                            <validationRules:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <DockPanel Grid.Row="2" LastChildFill="True">
                    <Button x:Name="RefreshHeadsets" DockPanel.Dock="Right"
                        Style="{StaticResource MaterialDesignFloatingActionButton}"
                        Content="{materialDesign:PackIcon Refresh}"
                        materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                        materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsBusy}"/>
                    <ComboBox materialDesign:HintAssist.Hint="Headset"
                          materialDesign:HintAssist.IsFloating="True"
                          x:Name="Headsets" DockPanel.Dock="Left" 
                          DisplayMemberPath="id" Margin="0,0,10,0"
                          IsEnabled="{Binding Headsets, Converter={StaticResource CountToBooleanConverter}}">
                        <ComboBox.Text>
                            <Binding
                            Path="SelectedHeadset" Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationRules:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.Text>
                    </ComboBox>
                </DockPanel>

                <DockPanel Grid.Row="3" LastChildFill="True">
                    <Button x:Name="RefreshProfiles" DockPanel.Dock="Right"
                        Style="{StaticResource MaterialDesignFloatingActionButton}"
                        Content="{materialDesign:PackIcon Refresh}"
                        IsEnabled="{Binding SelectedHeadset, Converter={StaticResource ObjectToBooleanConverter}}"/>
                    <ComboBox materialDesign:HintAssist.Hint="Profile"
                          materialDesign:HintAssist.IsFloating="True"
                          x:Name="Profiles" DockPanel.Dock="Left"
                          Margin="0,0,10,0">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                                <Binding Path="Profiles" Converter="{StaticResource CountToBooleanConverter}"/>
                                <Binding Path="SelectedHeadset" Converter="{StaticResource ObjectToBooleanConverter}"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                        <ComboBox.Text>
                            <Binding
                            Path="SelectedProfile" Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationRules:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.Text>
                    </ComboBox>
                </DockPanel>

                <Button x:Name="Connect" Content="Connect" Grid.Row="4" 
                HorizontalAlignment="Right" VerticalAlignment="Bottom"
                Style="{StaticResource MaterialDesignRaisedButton}"/>
            </Grid>
        </Border>
    </materialDesign:DialogHost>
</UserControl>
